/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.util.*;
import dto.DTO;
import dao.DAO;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.*;


public class TextToMorseConverter extends javax.swing.JFrame {

    /**
     * Creates new form TextToMorseConverter
     */
    public TextToMorseConverter() {
        initComponents();
        if (new DAO().readAllText().size()==0){
            new GetMorseTable();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addText = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        morseArea = new javax.swing.JTextArea();
        convert = new javax.swing.JButton();
        getSound = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        addText.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addText.setText("Add Text");

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        morseArea.setColumns(20);
        morseArea.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        morseArea.setRows(5);
        jScrollPane2.setViewportView(morseArea);

        convert.setText("Convert");
        convert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertActionPerformed(evt);
            }
        });

        getSound.setText("Get Sound");
        getSound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getSoundActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(addText, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(convert))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(getSound)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 976, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(convert)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(getSound)
                .addContainerGap(72, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void convertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertActionPerformed
        DAO dao= new DAO();
        ArrayList<String> morseResultArray= new ArrayList<String>();
        char[] text = textArea.getText().toCharArray();
        for(char ch : text){
            String str=dao.convert(Character.toString(ch));
            morseResultArray.add(str);
        }
        StringBuilder morseResult=new StringBuilder();
        for(String s : morseResultArray){
            morseResult.append(s );
        }
        morseArea.setText(morseResult.toString());
    }//GEN-LAST:event_convertActionPerformed

    private void getSoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getSoundActionPerformed
        final int DOT = 200, DASH = DOT * 3, FREQ = 800;
        String line = morseArea.getText();
        try {
            for (char c : line.toUpperCase().toCharArray()) {
                System.out.print(c == '|' ? "\n" : c);
                if (c!='|'){
                    try (SourceDataLine sdl = AudioSystem.getSourceDataLine(new AudioFormat(8000F, 8, 1, true, false))) {
                        sdl.open(sdl.getFormat());
                        sdl.start();
                        for (int i = 0; i < (c == '.' ? DOT : DASH) * 8; i++) {
                            sdl.write(new byte[]{(byte) (Math.sin(i / (8000F / (c == '.' ? (FREQ*2) : FREQ)) * 2.0 * Math.PI) * 127.0)}, 0, 1);
                        }
                        sdl.drain();
                    } catch (LineUnavailableException ex) { 
                    Logger.getLogger(TextToMorseConverter.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    Thread.sleep(DOT / 5);
                }    
            }
        } catch (InterruptedException ex) {
            Logger.getLogger(TextToMorseConverter.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_getSoundActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TextToMorseConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TextToMorseConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TextToMorseConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TextToMorseConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TextToMorseConverter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addText;
    private javax.swing.JButton convert;
    private javax.swing.JButton getSound;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea morseArea;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
